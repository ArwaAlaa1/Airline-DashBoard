// <auto-generated />
using System;
using AirLine.MyDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirLine.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20230927230314_phoneandqualify")]
    partial class phoneandqualify
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AirLine.Models.AirCraft", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<string>("Assistant_Pilot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Host1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisable")
                        .HasColumnType("bit");

                    b.Property<string>("Major_Poilot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.ToTable("AirCrafts");
                });

            modelBuilder.Entity("AirLine.Models.AirLine_Company", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AirLine_Companies");
                });

            modelBuilder.Entity("AirLine.Models.Airline_Phones", b =>
                {
                    b.Property<int>("AirLineId")
                        .HasColumnType("int");

                    b.Property<string>("Phones")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnOrder(2);

                    b.HasKey("AirLineId", "Phones");

                    b.ToTable("AirLinesPhones");
                });

            modelBuilder.Entity("AirLine.Models.Emp_Qualification", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeId", "Qualification");

                    b.ToTable("EmpQualifications");
                });

            modelBuilder.Entity("AirLine.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AirLineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BDDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BDMonth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BDYear")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AirLineId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AirLine.Models.Road", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("Distination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisable")
                        .HasColumnType("bit");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roads");
                });

            modelBuilder.Entity("AirLine.Models.Road_Craft", b =>
                {
                    b.Property<int>("AirCraftId")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepatureTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisable")
                        .HasColumnType("bit");

                    b.Property<int>("NumPassenger")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int?>("RoadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AirCraftId", "RouteId", "DepatureTime");

                    b.HasIndex("RoadId");

                    b.ToTable("Road_Crafts");
                });

            modelBuilder.Entity("AirLine.Models.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount_Money")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("AirLine.Models.AirCraft", b =>
                {
                    b.HasOne("AirLine.Models.AirLine_Company", "AirLine")
                        .WithMany("AirCrafts")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirLine");
                });

            modelBuilder.Entity("AirLine.Models.Airline_Phones", b =>
                {
                    b.HasOne("AirLine.Models.AirLine_Company", "AirLine")
                        .WithMany()
                        .HasForeignKey("AirLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirLine");
                });

            modelBuilder.Entity("AirLine.Models.Emp_Qualification", b =>
                {
                    b.HasOne("AirLine.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AirLine.Models.Employee", b =>
                {
                    b.HasOne("AirLine.Models.AirLine_Company", "airLine")
                        .WithMany()
                        .HasForeignKey("AirLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("airLine");
                });

            modelBuilder.Entity("AirLine.Models.Road_Craft", b =>
                {
                    b.HasOne("AirLine.Models.AirCraft", null)
                        .WithMany("Craft_Roads")
                        .HasForeignKey("AirCraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirLine.Models.Road", null)
                        .WithMany("Road_Crafts")
                        .HasForeignKey("RoadId");
                });

            modelBuilder.Entity("AirLine.Models.Transaction", b =>
                {
                    b.HasOne("AirLine.Models.AirLine_Company", "AirLine")
                        .WithMany("Transactions")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirLine");
                });

            modelBuilder.Entity("AirLine.Models.AirCraft", b =>
                {
                    b.Navigation("Craft_Roads");
                });

            modelBuilder.Entity("AirLine.Models.AirLine_Company", b =>
                {
                    b.Navigation("AirCrafts");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("AirLine.Models.Road", b =>
                {
                    b.Navigation("Road_Crafts");
                });
#pragma warning restore 612, 618
        }
    }
}
